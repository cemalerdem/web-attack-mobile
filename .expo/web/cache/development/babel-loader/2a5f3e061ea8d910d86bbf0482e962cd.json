{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\cerdem\\\\Desktop\\\\GraduationProject\\\\GPMobile\\\\screens\\\\LinksScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar LinksScreen = function (_React$Component) {\n  _inherits(LinksScreen, _React$Component);\n\n  var _super = _createSuper(LinksScreen);\n\n  function LinksScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LinksScreen);\n\n    _this = _super.call(this, props);\n\n    _this.FlatListItemSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 0.5,\n          width: \"100%\",\n          backgroundColor: \"rgba(0,0,0,0.5)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderItem = function (data) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.lightText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, data.item.path), React.createElement(Text, {\n        style: styles.lightText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, data.item.statusCode), React.createElement(Text, {\n        style: styles.lightText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, data.item.method));\n    };\n\n    _this.state = {\n      loading: true,\n      dataSource: []\n    };\n    return _this;\n  }\n\n  _createClass(LinksScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://webattackapi.azurewebsites.net/api/Admin/request-stream\").then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          loading: false,\n          dataSource: responseJson\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(View, {\n          style: styles.loader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0c9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        ItemSeparatorComponent: this.FlatListItemSeparator,\n        renderItem: function renderItem(item) {\n          return _this3.renderItem(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LinksScreen;\n}(React.Component);\n\nexport { LinksScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  loader: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  list: {\n    paddingVertical: 4,\n    margin: 5,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/Users/cerdem/Desktop/GraduationProject/GPMobile/screens/LinksScreen.js"],"names":["React","LinksScreen","props","FlatListItemSeparator","height","width","backgroundColor","renderItem","data","styles","list","lightText","item","path","statusCode","method","state","loading","dataSource","fetch","then","response","json","responseJson","setState","catch","error","console","log","loader","container","Component","StyleSheet","create","flex","justifyContent","alignItems","paddingVertical","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ActivityIndicator,\n  FlatList,\n  Text,\n  TouchableOpacity,\n} from \"react-native\";\n\nexport default class LinksScreen extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      dataSource: [],\n    };\n  } \n\n  componentDidMount() {\n    fetch(\"https://webattackapi.azurewebsites.net/api/Admin/request-stream\")\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({\n          loading: false,\n          dataSource: responseJson,\n        });\n      })\n      .catch((error) => console.log(error));\n  } \n\n  FlatListItemSeparator = () => {\n    return (\n      <View\n        style={{\n          height: 0.5,\n          width: \"100%\",\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n        }}\n      />\n    );\n  };\n\n  renderItem = (data) => (\n    <TouchableOpacity style={styles.list}>\n      <Text style={styles.lightText}>{data.item.path}</Text>\n      <Text style={styles.lightText}>{data.item.statusCode}</Text>\n      <Text style={styles.lightText}>{data.item.method}</Text>\n    </TouchableOpacity>\n  );\n  render() {\n    if (this.state.loading) {\n      return (\n        <View style={styles.loader}>\n          <ActivityIndicator size=\"large\" color=\"#0c9\" />\n        </View>\n      );\n    }\n    return (\n      <View style={styles.container}>\n        <FlatList\n          data={this.state.dataSource}\n          ItemSeparatorComponent={this.FlatListItemSeparator}\n          renderItem={(item) => this.renderItem(item)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  loader: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n  },\n  list: {\n    paddingVertical: 4,\n    margin: 5,\n    backgroundColor: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}